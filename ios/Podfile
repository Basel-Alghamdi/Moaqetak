# Define the minimum iOS version. Firebase requires iOS 12 or higher.
platform :ios, '13.0'

# Ensure pods use modular headers to avoid non-modular include errors
use_modular_headers!

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  # Use static frameworks to avoid non-modular header issues with FlutterFire/Firebase
  use_frameworks! :linkage => :static

  # Force Firebase pods to use modular headers explicitly
  pod 'Firebase', :modular_headers => true
  pod 'Firebase/CoreOnly', :modular_headers => true
  pod 'Firebase/Auth', :modular_headers => true
  pod 'FirebaseCore', :modular_headers => true
  pod 'FirebaseAuth', :modular_headers => true

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  # Patch firebase_auth plugin headers to avoid including non-modular umbrella Firebase.h
  begin
    plugin_headers = Dir.glob(File.join(File.dirname(__FILE__), '.symlinks', 'plugins', 'firebase_auth', 'ios', 'Classes', '**', '*.{h,m}'))
    plugin_headers.each do |path|
      content = File.read(path)
      updated = content.gsub('#import <Firebase/Firebase.h>', "#import <FirebaseCore/FirebaseCore.h>\n#import <FirebaseAuth/FirebaseAuth.h>")
      if updated != content
        File.write(path, updated)
      end
    end
  rescue => e
    puts "[post_install] Skipped firebase_auth header patch: #{e}"
  end
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    # Allow non-modular includes within framework modules as a compatibility fallback
    target.build_configurations.each do |config|
      config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
    end
  end
end
